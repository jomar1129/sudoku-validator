const isValidSudoku = require("./suduko.js");

/* :: Both valid Suduko ::*/
/*:: OUTPUT SHOULD BE FALSE ::*/

const suduko1 = [
  ["5", "3", ".", ".", "7", ".", ".", ".", "."],
  ["6", ".", ".", "1", "9", "5", ".", ".", "."],
  [".", "9", "8", ".", ".", ".", ".", "6", "."],
  ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
  ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
  ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
  [".", "6", ".", ".", ".", ".", "2", "8", "."],
  [".", ".", ".", "4", "1", "9", ".", ".", "5"],
  [".", ".", ".", ".", "8", ".", ".", "7", "9"],
];

console.log(isValidSudoku(suduko1));

const suduko2 = [
  ["8", "3", "5", "4", "1", "6", "9", "2", "7"],
  ["2", "9", "6", "8", "5", "7", "4", "3", "1"],
  ["4", "1", "7", "2", "9", "3", "6", "5", "8"],
  ["5", "6", "9", "1", "3", "4", "7", "8", "2"],
  ["1", "2", "3", "6", "7", "8", "5", "4", "9"],
  ["7", "4", "8", "5", "2", "9", "1", "6", "3"],
  ["6", "5", "2", "7", "8", "1", "3", "9", "4"],
  ["9", "8", "1", "3", "4", "5", "2", "7", "6"],
  ["3", "7", "4", "9", "6", "2", "8", "1", "5"],
];

console.log(isValidSudoku(suduko2));

/*:: SUDUOKO TEST WITH LETTERS ON IT ::*/
/*:: OUTPUT SHOULD BE FALSE ::*/

let suduko3 = [
  ["5", "3", "9", "9", "7", "Y", "Z", "", "9"],
  ["6", "", "9", "1", "9", "5", "", "", "9"],
  ["", "9", "8", "", "", "", "", "6", ""],
  ["8", "", "", "", "6", "", "", "", "3"],
  ["4", "", "", "8", "", "3", "", "", "1"],
  ["7", "", "", "", "2", "", "", "", "6"],
  ["", "6", "", "", "", "", "2", "8", ""],
  ["", "", "", "4", "1", "9", "", "", "5"],
  ["", "", "", "", "8", "", "", "7", "9"],
];

console.log(isValidSudoku(suduko3));

/*:: SUDUOKO TEST WITH DUPLICATE ON ROWS ::*/
/*:: OUTPUT SHOULD BE FALSE ::*/
const suduko4 = [
  ["8", "3", "3", "4", "1", "6", "9", "2", "7"], // first line has duplicate
  ["2", "9", "6", "8", "5", "7", "4", "3", "1"],
  ["4", "1", "7", "2", "9", "3", "6", "5", "8"],
  ["5", "6", "9", "1", "3", "4", "7", "8", "2"],
  ["1", "2", "3", "6", "7", "8", "5", "4", "9"],
  ["7", "4", "8", "5", "2", "9", "1", "6", "3"],
  ["6", "5", "2", "7", "8", "1", "3", "9", "4"],
  ["9", "8", "1", "3", "4", "5", "2", "7", "6"],
  ["3", "7", "4", "9", "6", "2", "8", "1", "5"],
];

console.log(isValidSudoku(suduko4));

/*:: SUDUOKO TEST WITH DUPLICATE ON COLUMN ::*/
/*:: OUTPUT SHOULD BE FALSE ::*/
/*:: 1st column ::*/

const suduko5 = [
  ["8", "3", "5", "4", "1", "6", "9", "2", "7"],
  ["2", "9", "6", "8", "5", "7", "4", "3", "1"],
  ["4", "1", "7", "2", "9", "3", "6", "5", "8"],
  ["5", "6", "9", "1", "3", "4", "7", "8", "2"],
  ["1", "2", "3", "6", "7", "8", "5", "4", "9"],
  ["7", "4", "8", "5", "2", "9", "1", "6", "3"],
  ["8", "5", "2", "7", "8", "1", "3", "9", "4"],
  ["9", "8", "1", "3", "4", "5", "2", "7", "6"],
  ["3", "7", "4", "9", "6", "2", "8", "1", "5"],
];

console.log(isValidSudoku(suduko5));

/*:: SUDUOKO TEST WITH DUPLICATE ON 3x3 ::*/
/*:: OUTPUT SHOULD BE FALSE ::*/

const suduko6 = [
  ["8", "3", "5", "4", "1", "6", "9", "2", "7"],
  ["2", "9", "6", "8", "5", "7", "4", "3", "1"],
  ["4", "1", "7", "2", "9", "3", "6", "5", "8"],
  ["5", "6", "9", "1", "3", "4", "7", "8", "2"],
  ["1", "2", "3", "6", "7", "8", "5", "4", "9"],
  ["7", "4", "8", "5", "2", "9", "1", "6", "3"],
  ["6", "5", "1", "7", "8", "1", "3", "9", "4"],
  ["9", "8", "1", "3", "4", "5", "2", "7", "6"],
  ["3", "7", "4", "9", "6", "2", "8", "1", "5"],
];
// 3x3 duplicate is here

console.log(isValidSudoku(suduko6));
